# version is not needed for `docker-compose` command, Uncomment when using `docker compose`.
#version: '3.8'

services:
  traefik:
    image: traefik:latest
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      - internal
      - app_net    
  
  testapp:
    build: ./testapp
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testapp.rule=Host(`app.localhost`)"
      - "traefik.http.routers.testapp.entrypoints=web"
      - "traefik.http.routers.testapp.service=testing-svc"
      - "traefik.http.services.testing-svc.loadbalancer.server.port=3000"
      - "traefik.docker.network=internal"
    networks:
      - internal
    container_name: app
  
  prometheus:
    image: prom/prometheus:latest

    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'

    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.service=prometheus-svc"
      - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"
      - "traefik.docker.network=internal"
    networks:
      - internal

volumes:
  prometheus_data:

networks:
  app_net:
  internal: